# Generated by Django 5.2 on 2025-04-18 22:40

from django.db import migrations

def migrate_villages_forward(apps, schema_editor):
    # Get the old Village model
    Village = apps.get_model('village', 'Village')
    # Get the new models
    District = apps.get_model('village', 'District')
    Block = apps.get_model('village', 'Block')
    PoliceStation = apps.get_model('village', 'PoliceStation')
    PostOffice = apps.get_model('village', 'PostOffice')
    Panchayat = apps.get_model('village', 'Panchayat')
    
    # For each existing village
    for village in Village.objects.all():
        # Create district
        district, _ = District.objects.get_or_create(
            name=village.district,
            defaults={'state': 'Bihar'}
        )
        
        # Create block
        block, _ = Block.objects.get_or_create(
            name=f"{village.name} Block",
            district=district
        )
        
        # Create police station
        police_station, _ = PoliceStation.objects.get_or_create(
            name=village.police_station,
            block=block
        )
        
        # Create post office
        post_office, _ = PostOffice.objects.get_or_create(
            name=village.post,
            police_station=police_station
        )
        
        # Create panchayat
        panchayat, _ = Panchayat.objects.get_or_create(
            name=village.panchayat,
            post_office=post_office
        )
        
        # Update village with new panchayat
        village.panchayat = panchayat
        village.save()

def migrate_villages_backward(apps, schema_editor):
    # No need to implement backward migration as we're keeping the data
    pass

class Migration(migrations.Migration):
    dependencies = [
        ('village', '0002_district_panchayat_remove_village_country_and_more'),
    ]

    operations = [
        migrations.RunPython(
            migrate_villages_forward,
            migrate_villages_backward
        ),
    ]
